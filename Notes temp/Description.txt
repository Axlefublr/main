

		Learn about autohotkey v2 in the documentation: https://lexikos.github.io/v2/docs/AutoHotkey.htm
		IDE used in the video: https://code.visualstudio.com/

		My github:
		https://github.com/Axlefublr/Personal

		Catch me on the ahk discord server as Axlefublr:
		https://discord.com/invite/Aat7KHmG7v

		The video script:
At first, objects seem scary, but once you learn how to use them you will love them!
In v1, objects very much exist, but aren't used in places where they make a lot of sense to be in
For example, v1 has this janky global variable "ErrorLevel", that gets updated by many commands
You used to have to use it to check what a command "returns"
Well sike, commands don't return anything, and Errorlevel can technically change at any moment
Often you actually had to save Errorlevel to a temporary variable, to check the value later.
Why would we need a middle man now?
Wouldn't it be better if the command just *returned* the value we want?
Well yes, and v2 does exactly that.
As you may already know, v2 replaced all commands with functions and removed the need for errorlevel by just returning the value
That's exactly where objects come in
For functions that return multiple values, we got a nice bundle of them
We can use the object that's returned to *have* the cake *and* eat it
Let's have a look at guis
In v1, they occupied the global space, and were an overall pain in the ass to contain
You call the id of the gui and then do whatever with it
In v2, you don't have to deal with that: guis are object oriented
You can easily have a gui in a function, and overall, have as many guis as you want in a single script, without any hassle
That's because you get the object of the gui, and then operate on that object
You won't need to worry about affecting some other gui in any way.
"Object" is actually a really broad abstraction
Arrays are objects, and so are maps
And both of them have their own properties and methods
Now hold on, Axlefublr (if that's even your real name), what are properties and methods?
The difference is actually really simple
I laughed my ass off when I learnt it
Here I'm using a variable and calling a function
Now I'm using a *property* and calling a *method*
Yes, the only difference between a normal variable and a property, a function and a method is belonging.
Properties and methods *belong* to something, like a class or an object
And to refer to a property or method, you first have to access the object